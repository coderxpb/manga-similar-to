{"version":3,"sources":["components/SearchContainer.js","components/MangaCard.js","App.js","reportWebVitals.js","index.js"],"names":["SearchContainer","props","className","type","label","placeholder","ref","e","onsearch","onSearched","MangaImg","styled","img","MangaTitle","div","MangaCard","src","manImg","manTitle","App","useState","recMangas","setRecMangas","handleSearch","a","preventDefault","console","log","target","value","fetch","mangaSearch","json","mangaSearchResult","id","results","mal_id","title","image_url","recommendationsPromise","recommendationsResult","data","recommendations","map","m","tempData","name","oldRec","item","i","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRAWeA,EATS,SAACC,GACxB,OACC,sBAAKC,UAAU,mBAAf,UACC,mBAAGA,UAAU,wBAAb,8BACA,uBAAOA,UAAU,yBAAyBC,KAAK,SAASC,MAAM,eAAeC,YAAY,wBAAwBC,IAAK,SAAAC,GAAC,OAAGA,GAAG,IAAIC,SAASP,EAAMQ,kB,cCJ7IC,EAAWC,IAAOC,IAAV,+DAKRC,EAAaF,IAAOG,IAAV,oEAgBDC,EAXG,SAACd,GAClB,OACC,sBAAKC,UAAU,aAAf,UACC,cAACQ,EAAD,CAAUR,UAAU,cAAcc,IAAKf,EAAMgB,SAC7C,cAACJ,EAAD,UACC,mBAAGX,UAAU,aAAb,SAA2BD,EAAMiB,iBCsCtBC,MAjDf,WACC,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAaMC,EAAY,uCAAG,WAAMhB,GAAN,uBAAAiB,EAAA,6DACpBjB,EAAEkB,iBADkB,SAGnBC,QAAQC,IAAIpB,EAAEqB,OAAOC,OAHF,SAIOC,MAAM,2CAAD,OAA4CvB,EAAEqB,OAAOC,MAArD,YAJZ,cAIbE,EAJa,gBAKaA,EAAYC,OALzB,cAKbC,EALa,OAObC,EAAKD,EAAkBE,QAAQ,GAAGC,OAC3BH,EAAkBE,QAAQ,GAAGE,MAC9BJ,EAAkBE,QAAQ,GAAGG,UATtB,UAckBR,MAAM,kCAAD,OAAmCI,EAAnC,qBAdvB,eAcbK,EAda,iBAeiBA,EAAuBP,OAfxC,QAebQ,EAfa,OAXDC,EA2BPD,EAAsBE,gBA1BlCpB,EAAa,IACbI,QAAQC,IAAIc,GACZA,EAAKE,KAAI,SAAAC,GACR,IAAMC,EAAW,CAACjC,IAAKgC,EAAEN,UAAUQ,KAAMF,EAAEP,OAC3CX,QAAQC,IAAIkB,GACZvB,GAAa,SAAAyB,GAAM,4BAAMA,GAAN,CAAaF,UAEjCnB,QAAQC,IAAR,iBAAsBN,IAoBrBK,QAAQC,IAAIa,GAjBO,kDAmBnBd,QAAQC,IAAR,MAnBmB,kCAXF,IAACc,IAWC,qBAAH,sDAuBjB,OACE,sBAAKvC,UAAU,MAAf,UACD,cAAC,EAAD,CAAiBO,WAAYc,IAC7B,qBAAKrB,UAAU,4BAAf,SACEmB,EAAUsB,KAAI,SAASK,EAAKC,GAC5B,OAAO,cAAC,EAAD,CAAWhC,OAAQ+B,EAAKpC,IAAKM,SAAU8B,EAAKF,gBCpCzCI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.66f658b8.chunk.js","sourcesContent":["import React from 'react';\n\nconst SearchContainer = (props) => {\n\treturn (\n\t\t<div className=\"search-container\">\n\t\t\t<p className=\"search-container-text\">Manga similar to</p>\n\t\t\t<input className=\"search-container-input\" type=\"search\" label=\"manga-search\" placeholder=\"enter manga name here\" ref={e=>(e||{}).onsearch=props.onSearched}/>\n\t\t</div>\n\t)\n}\n\nexport default SearchContainer","import styled from \"styled-components\";\n\nconst MangaImg = styled.img`\n\twidth: 200px;\n\theight: 300px;\n`;\n\nconst MangaTitle = styled.div`\n\twidth: 200px;\n\tbackground: orange;\n`;\n\nconst MangaCard = (props) =>{\n\treturn(\n\t\t<div className=\"manga-card\">\n\t\t\t<MangaImg className=\"manga-image\" src={props.manImg}/>\n\t\t\t<MangaTitle>\n\t\t\t\t<p className=\"manga-name\">{props.manTitle}</p>\n\t\t\t</MangaTitle>\n\t\t</div>\n\t)\n}\n\nexport default MangaCard;","import React,{useState} from 'react';\n\nimport './App.scss';\nimport SearchContainer from './components/SearchContainer';\nimport MangaCard from './components/MangaCard';\n\nfunction App() {\n\tconst [recMangas, setRecMangas] = useState([]);\n\n\tconst recToComps = (data) => {\n\t\tsetRecMangas([]);\n\t\tconsole.log(data);\n\t\tdata.map(m => {\n\t\t\tconst tempData = {img: m.image_url,name: m.title};\n\t\t\tconsole.log(tempData);\n\t\t\tsetRecMangas(oldRec=>[...oldRec,tempData]);\n\t\t})\n\t\tconsole.log(`recced ${recMangas}`);\n\t}\n\n\tconst handleSearch = async(e) =>{\n\t\te.preventDefault();\n\t\ttry{\n\t\t\tconsole.log(e.target.value);\n\t\t\tconst mangaSearch = await fetch(`https://api.jikan.moe/v3/search/manga?q=${e.target.value}&page=1`)\n\t\t\tconst mangaSearchResult = await mangaSearch.json();\n\n\t\t\tconst id = mangaSearchResult.results[0].mal_id;\n\t\t\tconst name = mangaSearchResult.results[0].title;\n\t\t\tconst img = mangaSearchResult.results[0].image_url;\n\n\t\t\t//const tempData = {id,name,img};\n\t\t\t//recToComps(tempData);\n\n\t\t\tconst recommendationsPromise = await fetch(`https://api.jikan.moe/v3/manga/${id}/recommendations`);\n\t\t\tconst recommendationsResult = await recommendationsPromise.json();\n\t\t\trecToComps(recommendationsResult.recommendations);\n\t\t\tconsole.log(recommendationsResult);\n\t\t}catch(err){\n\t\t\tconsole.log(err);\n\t\t}\n\t}\n\n  return (\n    <div className=\"App\">\n\t\t\t<SearchContainer onSearched={handleSearch}/>\n\t\t\t<div className=\"recommendations-container\">\n\t\t\t\t{recMangas.map(function(item,i){\n\t\t\t\t\treturn <MangaCard manImg={item.img} manTitle={item.name}/>\n\t\t\t\t})}\n\t\t\t</div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}